.type Demand
.type Inv
.type Company

.decl Rule(n: number)
.input Rule

.decl In(v0: Inv, v1: Demand, v2: Company, v3: Company)
.input In

.decl not_null(v0: Company)
.input not_null

.decl Out(v0: Company, v1: Demand)
.decl In_exists(v0: Inv, v1: Demand, v2: Company, v3: Company, r: number)
.output In_exists

.decl not_null_exists(v0: Company, r: number)
.output not_null_exists

.decl Out_exists(v0: Company, v1: Demand, r: number)
.output Out_exists



Out(v0, v1) :- Out(v0, v1), Rule(0).
Out_exists(v0, v1, r) :- Out(v0, v1), r = 0, Rule(0).
Out_exists(v0, v1, r) :- Out_exists(v0, v1, r), Rule(r), Rule(0).
Out(v0, v1) :- not_null(v0), Out(v0, v1), Rule(1).
Out_exists(v0, v1, r) :- not_null(v0), Out(v0, v1), r = 1, Rule(1).
Out_exists(v0, v1, r) :- not_null_exists(v0, r), Out(v0, v1), Rule(r), Rule(1).
Out_exists(v0, v1, r) :- not_null(v0), Out_exists(v0, v1, r), Rule(r), Rule(1).
Out(v0, v1) :- Out(v0, v1), Out(v0, v1), Rule(2).
Out_exists(v0, v1, r) :- Out(v0, v1), Out(v0, v1), r = 2, Rule(2).
Out_exists(v0, v1, r) :- Out_exists(v0, v1, r), Out(v0, v1), Rule(r), Rule(2).
Out_exists(v0, v1, r) :- Out(v0, v1), Out_exists(v0, v1, r), Rule(r), Rule(2).
Out(v0, v1) :- not_null(v0), not_null(v0), Out(v0, v1), Rule(3).
Out_exists(v0, v1, r) :- not_null(v0), not_null(v0), Out(v0, v1), r = 3, Rule(3).
Out_exists(v0, v1, r) :- not_null_exists(v0, r), not_null(v0), Out(v0, v1), Rule(r), Rule(3).
Out_exists(v0, v1, r) :- not_null(v0), not_null_exists(v0, r), Out(v0, v1), Rule(r), Rule(3).
Out_exists(v0, v1, r) :- not_null(v0), not_null(v0), Out_exists(v0, v1, r), Rule(r), Rule(3).
Out(v0, v1) :- not_null(v0), Out(v0, v1), Out(v0, v1), Rule(4).
Out_exists(v0, v1, r) :- not_null(v0), Out(v0, v1), Out(v0, v1), r = 4, Rule(4).
Out_exists(v0, v1, r) :- not_null_exists(v0, r), Out(v0, v1), Out(v0, v1), Rule(r), Rule(4).
Out_exists(v0, v1, r) :- not_null(v0), Out_exists(v0, v1, r), Out(v0, v1), Rule(r), Rule(4).
Out_exists(v0, v1, r) :- not_null(v0), Out(v0, v1), Out_exists(v0, v1, r), Rule(r), Rule(4).
Out(v0, v1) :- Out(v0, v1), Out(v0, v1), Out(v0, v1), Rule(5).
Out_exists(v0, v1, r) :- Out(v0, v1), Out(v0, v1), Out(v0, v1), r = 5, Rule(5).
Out_exists(v0, v1, r) :- Out_exists(v0, v1, r), Out(v0, v1), Out(v0, v1), Rule(r), Rule(5).
Out_exists(v0, v1, r) :- Out(v0, v1), Out_exists(v0, v1, r), Out(v0, v1), Rule(r), Rule(5).
Out_exists(v0, v1, r) :- Out(v0, v1), Out(v0, v1), Out_exists(v0, v1, r), Rule(r), Rule(5).
Out(v0, v1) :- Out(v0, v1), Out(v0, v2), Out(v0, v2), Rule(6).
Out_exists(v0, v1, r) :- Out(v0, v1), Out(v0, v2), Out(v0, v2), r = 6, Rule(6).
Out_exists(v0, v1, r) :- Out_exists(v0, v1, r), Out(v0, v2), Out(v0, v2), Rule(r), Rule(6).
Out_exists(v0, v1, r) :- Out(v0, v1), Out_exists(v0, v2, r), Out(v0, v2), Rule(r), Rule(6).
Out_exists(v0, v1, r) :- Out(v0, v1), Out(v0, v2), Out_exists(v0, v2, r), Rule(r), Rule(6).
Out(v0, v1) :- Out(v0, v2), Out(v0, v2), Out(v0, v1), Rule(7).
Out_exists(v0, v1, r) :- Out(v0, v2), Out(v0, v2), Out(v0, v1), r = 7, Rule(7).
Out_exists(v0, v1, r) :- Out_exists(v0, v2, r), Out(v0, v2), Out(v0, v1), Rule(r), Rule(7).
Out_exists(v0, v1, r) :- Out(v0, v2), Out_exists(v0, v2, r), Out(v0, v1), Rule(r), Rule(7).
Out_exists(v0, v1, r) :- Out(v0, v2), Out(v0, v2), Out_exists(v0, v1, r), Rule(r), Rule(7).
Out(v0, v1) :- Out(v0, v2), Out(v0, v1), Out(v0, v2), Rule(8).
Out_exists(v0, v1, r) :- Out(v0, v2), Out(v0, v1), Out(v0, v2), r = 8, Rule(8).
Out_exists(v0, v1, r) :- Out_exists(v0, v2, r), Out(v0, v1), Out(v0, v2), Rule(r), Rule(8).
Out_exists(v0, v1, r) :- Out(v0, v2), Out_exists(v0, v1, r), Out(v0, v2), Rule(r), Rule(8).
Out_exists(v0, v1, r) :- Out(v0, v2), Out(v0, v1), Out_exists(v0, v2, r), Rule(r), Rule(8).
Out(v0, v1) :- Out(v0, v2), Out(v3, v2), Out(v3, v1), Rule(9).
Out_exists(v0, v1, r) :- Out(v0, v2), Out(v3, v2), Out(v3, v1), r = 9, Rule(9).
Out_exists(v0, v1, r) :- Out_exists(v0, v2, r), Out(v3, v2), Out(v3, v1), Rule(r), Rule(9).
Out_exists(v0, v1, r) :- Out(v0, v2), Out_exists(v3, v2, r), Out(v3, v1), Rule(r), Rule(9).
Out_exists(v0, v1, r) :- Out(v0, v2), Out(v3, v2), Out_exists(v3, v1, r), Rule(r), Rule(9).
Out(v0, v1) :- Out(v0, v2), Out(v3, v1), Out(v3, v2), Rule(10).
Out_exists(v0, v1, r) :- Out(v0, v2), Out(v3, v1), Out(v3, v2), r = 10, Rule(10).
Out_exists(v0, v1, r) :- Out_exists(v0, v2, r), Out(v3, v1), Out(v3, v2), Rule(r), Rule(10).
Out_exists(v0, v1, r) :- Out(v0, v2), Out_exists(v3, v1, r), Out(v3, v2), Rule(r), Rule(10).
Out_exists(v0, v1, r) :- Out(v0, v2), Out(v3, v1), Out_exists(v3, v2, r), Rule(r), Rule(10).
