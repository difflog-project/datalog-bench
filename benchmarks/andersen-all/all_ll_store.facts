%xp.addr = alloca i32*, align 8_bubble_sort	i32* %xp_bubble_sort
%yp.addr = alloca i32*, align 8_bubble_sort	i32* %yp_bubble_sort
%arr.addr = alloca i32*, align 8_bubble_sort	i32* %arr_bubble_sort
%arr.addr = alloca i32*, align 8_bubble_sort	i32* %arr_bubble_sort
%a.addr = alloca i8**, align 8_complex_swap	i8** %a_complex_swap
%b.addr = alloca i8**, align 8_complex_swap	i8** %b_complex_swap
%c = alloca i8*, align 8_complex_swap	%1 = load i8*, i8** %0, align 8_complex_swap
%4 = load i8**, i8*** %a.addr, align 8_complex_swap	%3 = load i8*, i8** %2, align 8_complex_swap
%6 = load i8**, i8*** %b.addr, align 8_complex_swap	%5 = load i8*, i8** %c, align 8_complex_swap
%a.addr = alloca i8***, align 8_complex_swap	i8*** %a_complex_swap
%b.addr = alloca i8***, align 8_complex_swap	i8*** %b_complex_swap
%c = alloca i8**, align 8_complex_swap	%1 = load i8**, i8*** %0, align 8_complex_swap
%d = alloca i8**, align 8_complex_swap	%3 = load i8**, i8*** %2, align 8_complex_swap
%a.addr = alloca i8***, align 8_complex_swap	i8*** %a_complex_swap
%b.addr = alloca i8***, align 8_complex_swap	i8*** %b_complex_swap
%a.addr = alloca i8***, align 8_complex_swap	i8*** %a_complex_swap
%b.addr = alloca i8***, align 8_complex_swap	i8*** %b_complex_swap
%a.addr = alloca i8***, align 8_complex_swap	i8*** %a_complex_swap
%b.addr = alloca i8***, align 8_complex_swap	i8*** %b_complex_swap
%pa = alloca i8*, align 8_complex_swap	i8* getelementptr inbounds ([20 x i8], [20 x i8]* @a, i32 0, i32 0)_complex_swap
%pb = alloca i8*, align 8_complex_swap	i8* getelementptr inbounds ([20 x i8], [20 x i8]* @b, i32 0, i32 0)_complex_swap
%p1 = alloca i8**, align 8_complex_swap	%pa = alloca i8*, align 8_complex_swap
%p2 = alloca i8**, align 8_complex_swap	%pb = alloca i8*, align 8_complex_swap
%fp1 = alloca i8*, align 8_complex_swap	%4 = load i8*, i8** %3, align 8_complex_swap
%fp2 = alloca i8*, align 8_complex_swap	%6 = load i8*, i8** %5, align 8_complex_swap
%fp1 = alloca i8*, align 8_complex_swap	%9 = load i8*, i8** %8, align 8_complex_swap
%fp2 = alloca i8*, align 8_complex_swap	%11 = load i8*, i8** %10, align 8_complex_swap
%fp1 = alloca i8*, align 8_complex_swap	%14 = load i8*, i8** %13, align 8_complex_swap
%fp2 = alloca i8*, align 8_complex_swap	%16 = load i8*, i8** %15, align 8_complex_swap
%fp1 = alloca i8*, align 8_complex_swap	%18 = load i8*, i8** %17, align 8_complex_swap
%fp2 = alloca i8*, align 8_complex_swap	%20 = load i8*, i8** %19, align 8_complex_swap
%pb1 = alloca i8*, align 8_complex_swap	%21 = load i8*, i8** %fp1, align 8_complex_swap
%pa1 = alloca i8*, align 8_complex_swap	%22 = load i8*, i8** %fp2, align 8_complex_swap
%head.addr = alloca %struct.list*, align 8_linklist	%struct.list* %head_linklist
%cur = alloca %struct.list*, align 8_linklist	%0 = load %struct.list*, %struct.list** %head.addr, align 8_linklist
%cur = alloca %struct.list*, align 8_linklist	%4 = load %struct.list*, %struct.list** %next, align 8_linklist
%head = alloca %struct.list*, align 8_linklist	%0 = bitcast i8* %call to %struct.list*_linklist
%next = getelementptr inbounds %struct.list, %struct.list* %1, i32 0, i32 1_linklist	%struct.list* null_linklist
%cur = alloca %struct.list*, align 8_linklist	%5 = bitcast i8* %call1 to %struct.list*_linklist
%next3 = getelementptr inbounds %struct.list, %struct.list* %9, i32 0, i32 1_linklist	%8 = load %struct.list*, %struct.list** %head, align 8_linklist
%head = alloca %struct.list*, align 8_linklist	%10 = load %struct.list*, %struct.list** %cur, align 8_linklist
%l.addr = alloca %struct.list*, align 8_linklist	%struct.list* %l_linklist
%elem.addr = alloca %struct.list*, align 8_linklist	%struct.list* %elem_linklist
%head = alloca %struct.list*, align 8_linklist	%0 = load %struct.list*, %struct.list** %l.addr, align 8_linklist
%t = alloca %struct.list*, align 8_linklist	%2 = load %struct.list*, %struct.list** %next, align 8_linklist
%head = alloca %struct.list*, align 8_linklist	%3 = load %struct.list*, %struct.list** %t, align 8_linklist
%next1 = getelementptr inbounds %struct.list, %struct.list* %5, i32 0, i32 1_linklist	%4 = load %struct.list*, %struct.list** %elem.addr, align 8_linklist
%c = alloca i32*, align 8_linklist	%0 = bitcast [2 x i32]* %b to i32*_linklist
%head = alloca %struct.list*, align 8_linklist	%call = call %struct.list* @construct(i32 10)_linklist
%head1 = alloca %struct.list*, align 8_linklist	%call1 = call %struct.list* @construct(i32 2)_linklist
%traverse = alloca %struct.list*, align 8_linklist	%1 = load %struct.list*, %struct.list** %head, align 8_linklist
%traverse = alloca %struct.list*, align 8_linklist	%7 = load %struct.list*, %struct.list** %next, align 8_linklist
%traverse = alloca %struct.list*, align 8_linklist	%8 = load %struct.list*, %struct.list** %head1, align 8_linklist
%traverse = alloca %struct.list*, align 8_linklist	%14 = load %struct.list*, %struct.list** %next8, align 8_linklist
%head1 = alloca %struct.list*, align 8_linklist	%17 = load %struct.list*, %struct.list** %head, align 8_linklist
%c = alloca i32*, align 8_linklist	%arraydecay = getelementptr inbounds [10 x i32], [10 x i32]* %a, i32 0, i32 0_linklist
%head = alloca %struct.list*, align 8_linklist	%call11 = call %struct.list* @addlist(%struct.list* %18, %struct.list* %19)_linklist
%c = alloca i32*, align 8_pointer0	%a = alloca i32, align 4_pointer0
%d = alloca i32*, align 8_pointer0	%a = alloca i32, align 4_pointer0
%c = alloca i32*, align 8_pointer1	%a = alloca i32, align 4_pointer1
%d = alloca i32*, align 8_pointer1	%a = alloca i32, align 4_pointer1
%e = alloca i32*, align 8_pointer1	%a = alloca i32, align 4_pointer1
%x = alloca i32*, align 8_pointer2	%a = alloca i32, align 4_pointer2
%x = alloca i32*, align 8_pointer2	%b = alloca i32, align 4_pointer2
%x = alloca i32*, align 8_pointer3	%a = alloca i32, align 4_pointer3
%y = alloca i32*, align 8_pointer3	%b = alloca i32, align 4_pointer3
%x = alloca i32*, align 8_pointer3	%b = alloca i32, align 4_pointer3
%y = alloca i32*, align 8_pointer3	%a = alloca i32, align 4_pointer3
%z = alloca i32*, align 8_pointer3	%2 = load i32*, i32** %x, align 8_pointer3
%z = alloca i32*, align 8_pointer3	%3 = load i32*, i32** %y, align 8_pointer3
%p = alloca i32*, align 8_pointer4	%a = alloca i32, align 4_pointer4
%q = alloca i32*, align 8_pointer4	%b = alloca i32, align 4_pointer4
%x = alloca i32*, align 8_pointer5	%a = alloca i32, align 4_pointer5
%x = alloca i32*, align 8_pointer5	%b = alloca i32, align 4_pointer5
%point = alloca i32*, align 8_pointer6	i32* null_pointer6
%point = alloca i32*, align 8_pointer6	%a = alloca i32, align 4_pointer6
%x = alloca i32*, align 8_pointer6	%b = alloca i32, align 4_pointer6
%x = alloca i32*, align 8_pointer6	%c = alloca i32, align 4_pointer6
%d2 = alloca i32*, align 8_pointer6	%d1 = alloca i32, align 4_pointer6
%point = alloca i32*, align 8_pointer6	%7 = load i32*, i32** %d2, align 8_pointer6
%point = alloca i32*, align 8_pointer6	%9 = load i32*, i32** %x, align 8_pointer6
%e = alloca i32*, align 8_pointer6	%a = alloca i32, align 4_pointer6
%f = alloca i32*, align 8_pointer6	%a = alloca i32, align 4_pointer6
%dataRef = alloca i32*, align 8_sv-adapt1	%data = alloca i32, align 4_sv-adapt1
%argv.addr = alloca i8**, align 8_sv-adapt1	i8** %argv_sv-adapt1
%dataRef = alloca i32*, align 8_sv-adapt1	%data = alloca i32, align 4_sv-adapt1
%dataRef = alloca i32*, align 8_sv-adapt1	%data = alloca i32, align 4_sv-adapt1
%dp_1 = alloca i32*, align 8_sv-adapt2	%data = alloca i32, align 4_sv-adapt2
%dp_2 = alloca i32*, align 8_sv-adapt2	%data = alloca i32, align 4_sv-adapt2
%argv.addr = alloca i8**, align 8_sv-adapt2	i8** %argv_sv-adapt2
%dp3 = alloca i32*, align 8_sv-adapt2	%data = alloca i32, align 4_sv-adapt2
%dataref = alloca i32*, align 8_sv-adapt3	%data = alloca i32, align 4_sv-adapt3
%dataref = alloca i32*, align 8_sv-adapt3	%data = alloca i32, align 4_sv-adapt3
%dataref = alloca i32*, align 8_sv-adapt3	%data = alloca i32, align 4_sv-adapt3
%a.addr = alloca i8**, align 8_swap	i8** %a_swap
%b.addr = alloca i8**, align 8_swap	i8** %b_swap
%c = alloca i8*, align 8_swap	%1 = load i8*, i8** %0, align 8_swap
%4 = load i8**, i8*** %a.addr, align 8_swap	%3 = load i8*, i8** %2, align 8_swap
%6 = load i8**, i8*** %b.addr, align 8_swap	%5 = load i8*, i8** %c, align 8_swap
%a.addr = alloca i8*, align 8_swap	i8* %a_swap
%b.addr = alloca i8*, align 8_swap	i8* %b_swap
%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %p1, i64 0, i64 0_swap	%arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %a, i32 0, i32 0_swap
%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %p1, i64 0, i64 1_swap	%arraydecay1 = getelementptr inbounds [20 x i8], [20 x i8]* %b, i32 0, i32 0_swap
%pa = alloca i8*, align 8_swap	%0 = load i8*, i8** %arrayidx3, align 8_swap
%pb = alloca i8*, align 8_swap	%1 = load i8*, i8** %arrayidx4, align 16_swap
