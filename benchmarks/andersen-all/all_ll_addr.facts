%xp.addr = alloca i32*, align 8_bubble_sort	@(%xp.addr = alloca i32*, align 8)_bubble_sort
%yp.addr = alloca i32*, align 8_bubble_sort	@(%yp.addr = alloca i32*, align 8)_bubble_sort
%temp = alloca i32, align 4_bubble_sort	@(%temp = alloca i32, align 4)_bubble_sort
%arr.addr = alloca i32*, align 8_bubble_sort	@(%arr.addr = alloca i32*, align 8)_bubble_sort
%n.addr = alloca i32, align 4_bubble_sort	@(%n.addr = alloca i32, align 4)_bubble_sort
%i = alloca i32, align 4_bubble_sort	@(%i = alloca i32, align 4)_bubble_sort
%j = alloca i32, align 4_bubble_sort	@(%j = alloca i32, align 4)_bubble_sort
%arr.addr = alloca i32*, align 8_bubble_sort	@(%arr.addr = alloca i32*, align 8)_bubble_sort
%size.addr = alloca i32, align 4_bubble_sort	@(%size.addr = alloca i32, align 4)_bubble_sort
%i = alloca i32, align 4_bubble_sort	@(%i = alloca i32, align 4)_bubble_sort
%retval = alloca i32, align 4_bubble_sort	@(%retval = alloca i32, align 4)_bubble_sort
%arr = alloca [7 x i32], align 16_bubble_sort	@(%arr = alloca [7 x i32], align 16)_bubble_sort
%n = alloca i32, align 4_bubble_sort	@(%n = alloca i32, align 4)_bubble_sort
%a.addr = alloca i8**, align 8_complex_swap	@(%a.addr = alloca i8**, align 8)_complex_swap
%b.addr = alloca i8**, align 8_complex_swap	@(%b.addr = alloca i8**, align 8)_complex_swap
%c = alloca i8*, align 8_complex_swap	@(%c = alloca i8*, align 8)_complex_swap
%a.addr = alloca i8***, align 8_complex_swap	@(%a.addr = alloca i8***, align 8)_complex_swap
%b.addr = alloca i8***, align 8_complex_swap	@(%b.addr = alloca i8***, align 8)_complex_swap
%c = alloca i8**, align 8_complex_swap	@(%c = alloca i8**, align 8)_complex_swap
%d = alloca i8**, align 8_complex_swap	@(%d = alloca i8**, align 8)_complex_swap
%a.addr = alloca i8***, align 8_complex_swap	@(%a.addr = alloca i8***, align 8)_complex_swap
%b.addr = alloca i8***, align 8_complex_swap	@(%b.addr = alloca i8***, align 8)_complex_swap
%a.addr = alloca i8***, align 8_complex_swap	@(%a.addr = alloca i8***, align 8)_complex_swap
%b.addr = alloca i8***, align 8_complex_swap	@(%b.addr = alloca i8***, align 8)_complex_swap
%a.addr = alloca i8***, align 8_complex_swap	@(%a.addr = alloca i8***, align 8)_complex_swap
%b.addr = alloca i8***, align 8_complex_swap	@(%b.addr = alloca i8***, align 8)_complex_swap
%retval = alloca i32, align 4_complex_swap	@(%retval = alloca i32, align 4)_complex_swap
%stop = alloca i32, align 4_complex_swap	@(%stop = alloca i32, align 4)_complex_swap
%p1 = alloca i8**, align 8_complex_swap	@(%p1 = alloca i8**, align 8)_complex_swap
%p2 = alloca i8**, align 8_complex_swap	@(%p2 = alloca i8**, align 8)_complex_swap
%pa = alloca i8*, align 8_complex_swap	@(%pa = alloca i8*, align 8)_complex_swap
%pb = alloca i8*, align 8_complex_swap	@(%pb = alloca i8*, align 8)_complex_swap
%pa1 = alloca i8*, align 8_complex_swap	@(%pa1 = alloca i8*, align 8)_complex_swap
%pb1 = alloca i8*, align 8_complex_swap	@(%pb1 = alloca i8*, align 8)_complex_swap
%fp1 = alloca i8*, align 8_complex_swap	@(%fp1 = alloca i8*, align 8)_complex_swap
%fp2 = alloca i8*, align 8_complex_swap	@(%fp2 = alloca i8*, align 8)_complex_swap
i8* getelementptr inbounds ([20 x i8], [20 x i8]* @a, i32 0, i32 0)_complex_swap	@(@a = common global [20 x i8] zeroinitializer, align 16)_complex_swap
i8* getelementptr inbounds ([20 x i8], [20 x i8]* @b, i32 0, i32 0)_complex_swap	@(@b = common global [20 x i8] zeroinitializer, align 16)_complex_swap
%head.addr = alloca %struct.list*, align 8_linklist	@(%head.addr = alloca %struct.list*, align 8)_linklist
%cur = alloca %struct.list*, align 8_linklist	@(%cur = alloca %struct.list*, align 8)_linklist
%idx.addr = alloca i32, align 4_linklist	@(%idx.addr = alloca i32, align 4)_linklist
%head = alloca %struct.list*, align 8_linklist	@(%head = alloca %struct.list*, align 8)_linklist
%i = alloca i32, align 4_linklist	@(%i = alloca i32, align 4)_linklist
%cur = alloca %struct.list*, align 8_linklist	@(%cur = alloca %struct.list*, align 8)_linklist
%l.addr = alloca %struct.list*, align 8_linklist	@(%l.addr = alloca %struct.list*, align 8)_linklist
%elem.addr = alloca %struct.list*, align 8_linklist	@(%elem.addr = alloca %struct.list*, align 8)_linklist
%head = alloca %struct.list*, align 8_linklist	@(%head = alloca %struct.list*, align 8)_linklist
%t = alloca %struct.list*, align 8_linklist	@(%t = alloca %struct.list*, align 8)_linklist
%a = alloca [10 x i32], align 16_linklist	@(%a = alloca [10 x i32], align 16)_linklist
%b = alloca [2 x i32], align 4_linklist	@(%b = alloca [2 x i32], align 4)_linklist
%c = alloca i32*, align 8_linklist	@(%c = alloca i32*, align 8)_linklist
%head = alloca %struct.list*, align 8_linklist	@(%head = alloca %struct.list*, align 8)_linklist
%head1 = alloca %struct.list*, align 8_linklist	@(%head1 = alloca %struct.list*, align 8)_linklist
%traverse = alloca %struct.list*, align 8_linklist	@(%traverse = alloca %struct.list*, align 8)_linklist
%t = alloca i32, align 4_linklist	@(%t = alloca i32, align 4)_linklist
%arraydecay = getelementptr inbounds [10 x i32], [10 x i32]* %a, i32 0, i32 0_linklist	@(%a = alloca [10 x i32], align 16)_linklist
%a = alloca i32, align 4_pointer0	@(%a = alloca i32, align 4)_pointer0
%c = alloca i32*, align 8_pointer0	@(%c = alloca i32*, align 8)_pointer0
%d = alloca i32*, align 8_pointer0	@(%d = alloca i32*, align 8)_pointer0
%x = alloca i32, align 4_pointer0	@(%x = alloca i32, align 4)_pointer0
%a = alloca i32, align 4_pointer1	@(%a = alloca i32, align 4)_pointer1
%c = alloca i32*, align 8_pointer1	@(%c = alloca i32*, align 8)_pointer1
%d = alloca i32*, align 8_pointer1	@(%d = alloca i32*, align 8)_pointer1
%e = alloca i32*, align 8_pointer1	@(%e = alloca i32*, align 8)_pointer1
%x = alloca i32, align 4_pointer1	@(%x = alloca i32, align 4)_pointer1
%arg.addr = alloca i32, align 4_pointer2	@(%arg.addr = alloca i32, align 4)_pointer2
%a = alloca i32, align 4_pointer2	@(%a = alloca i32, align 4)_pointer2
%b = alloca i32, align 4_pointer2	@(%b = alloca i32, align 4)_pointer2
%x = alloca i32*, align 8_pointer2	@(%x = alloca i32*, align 8)_pointer2
%z = alloca i32, align 4_pointer2	@(%z = alloca i32, align 4)_pointer2
%arg.addr = alloca i32, align 4_pointer3	@(%arg.addr = alloca i32, align 4)_pointer3
%a = alloca i32, align 4_pointer3	@(%a = alloca i32, align 4)_pointer3
%b = alloca i32, align 4_pointer3	@(%b = alloca i32, align 4)_pointer3
%x = alloca i32*, align 8_pointer3	@(%x = alloca i32*, align 8)_pointer3
%y = alloca i32*, align 8_pointer3	@(%y = alloca i32*, align 8)_pointer3
%z = alloca i32*, align 8_pointer3	@(%z = alloca i32*, align 8)_pointer3
%z2 = alloca i32, align 4_pointer3	@(%z2 = alloca i32, align 4)_pointer3
%retval = alloca i32, align 4_pointer4	@(%retval = alloca i32, align 4)_pointer4
%a = alloca i32, align 4_pointer4	@(%a = alloca i32, align 4)_pointer4
%b = alloca i32, align 4_pointer4	@(%b = alloca i32, align 4)_pointer4
%p = alloca i32*, align 8_pointer4	@(%p = alloca i32*, align 8)_pointer4
%q = alloca i32*, align 8_pointer4	@(%q = alloca i32*, align 8)_pointer4
%s = alloca i32, align 4_pointer4	@(%s = alloca i32, align 4)_pointer4
%retval = alloca i32, align 4_pointer5	@(%retval = alloca i32, align 4)_pointer5
%in = alloca i32, align 4_pointer5	@(%in = alloca i32, align 4)_pointer5
%a = alloca i32, align 4_pointer5	@(%a = alloca i32, align 4)_pointer5
%b = alloca i32, align 4_pointer5	@(%b = alloca i32, align 4)_pointer5
%x = alloca i32*, align 8_pointer5	@(%x = alloca i32*, align 8)_pointer5
%s = alloca i32, align 4_pointer5	@(%s = alloca i32, align 4)_pointer5
%retval = alloca i32, align 4_pointer6	@(%retval = alloca i32, align 4)_pointer6
%stop = alloca i32, align 4_pointer6	@(%stop = alloca i32, align 4)_pointer6
%point = alloca i32*, align 8_pointer6	@(%point = alloca i32*, align 8)_pointer6
%a = alloca i32, align 4_pointer6	@(%a = alloca i32, align 4)_pointer6
%b = alloca i32, align 4_pointer6	@(%b = alloca i32, align 4)_pointer6
%c = alloca i32, align 4_pointer6	@(%c = alloca i32, align 4)_pointer6
%d = alloca i32, align 4_pointer6	@(%d = alloca i32, align 4)_pointer6
%d1 = alloca i32, align 4_pointer6	@(%d1 = alloca i32, align 4)_pointer6
%x = alloca i32*, align 8_pointer6	@(%x = alloca i32*, align 8)_pointer6
%d2 = alloca i32*, align 8_pointer6	@(%d2 = alloca i32*, align 8)_pointer6
%e = alloca i32*, align 8_pointer6	@(%e = alloca i32*, align 8)_pointer6
%f = alloca i32*, align 8_pointer6	@(%f = alloca i32*, align 8)_pointer6
%y = alloca i32, align 4_pointer6	@(%y = alloca i32, align 4)_pointer6
%data = alloca i32, align 4_sv-adapt1	@(%data = alloca i32, align 4)_sv-adapt1
%dataRef = alloca i32*, align 8_sv-adapt1	@(%dataRef = alloca i32*, align 8)_sv-adapt1
%data1 = alloca i32, align 4_sv-adapt1	@(%data1 = alloca i32, align 4)_sv-adapt1
%retval = alloca i32, align 4_sv-adapt1	@(%retval = alloca i32, align 4)_sv-adapt1
%argc.addr = alloca i32, align 4_sv-adapt1	@(%argc.addr = alloca i32, align 4)_sv-adapt1
%argv.addr = alloca i8**, align 8_sv-adapt1	@(%argv.addr = alloca i8**, align 8)_sv-adapt1
%data = alloca i32, align 4_sv-adapt1	@(%data = alloca i32, align 4)_sv-adapt1
%dataRef = alloca i32*, align 8_sv-adapt1	@(%dataRef = alloca i32*, align 8)_sv-adapt1
%data1 = alloca i32, align 4_sv-adapt1	@(%data1 = alloca i32, align 4)_sv-adapt1
%data = alloca i32, align 4_sv-adapt1	@(%data = alloca i32, align 4)_sv-adapt1
%dataRef = alloca i32*, align 8_sv-adapt1	@(%dataRef = alloca i32*, align 8)_sv-adapt1
%data1 = alloca i32, align 4_sv-adapt1	@(%data1 = alloca i32, align 4)_sv-adapt1
%data = alloca i32, align 4_sv-adapt2	@(%data = alloca i32, align 4)_sv-adapt2
%dp_1 = alloca i32*, align 8_sv-adapt2	@(%dp_1 = alloca i32*, align 8)_sv-adapt2
%dp_2 = alloca i32*, align 8_sv-adapt2	@(%dp_2 = alloca i32*, align 8)_sv-adapt2
%retval = alloca i32, align 4_sv-adapt2	@(%retval = alloca i32, align 4)_sv-adapt2
%argc.addr = alloca i32, align 4_sv-adapt2	@(%argc.addr = alloca i32, align 4)_sv-adapt2
%argv.addr = alloca i8**, align 8_sv-adapt2	@(%argv.addr = alloca i8**, align 8)_sv-adapt2
%data = alloca i32, align 4_sv-adapt2	@(%data = alloca i32, align 4)_sv-adapt2
%dp3 = alloca i32*, align 8_sv-adapt2	@(%dp3 = alloca i32*, align 8)_sv-adapt2
%data = alloca i32, align 4_sv-adapt2	@(%data = alloca i32, align 4)_sv-adapt2
%data = alloca i32, align 4_sv-adapt3	@(%data = alloca i32, align 4)_sv-adapt3
%dataref = alloca i32*, align 8_sv-adapt3	@(%dataref = alloca i32*, align 8)_sv-adapt3
%c = alloca i32, align 4_sv-adapt3	@(%c = alloca i32, align 4)_sv-adapt3
%data1 = alloca i32, align 4_sv-adapt3	@(%data1 = alloca i32, align 4)_sv-adapt3
%data = alloca i32, align 4_sv-adapt3	@(%data = alloca i32, align 4)_sv-adapt3
%dataref = alloca i32*, align 8_sv-adapt3	@(%dataref = alloca i32*, align 8)_sv-adapt3
%data1 = alloca i32, align 4_sv-adapt3	@(%data1 = alloca i32, align 4)_sv-adapt3
%data = alloca i32, align 4_sv-adapt3	@(%data = alloca i32, align 4)_sv-adapt3
%dataref = alloca i32*, align 8_sv-adapt3	@(%dataref = alloca i32*, align 8)_sv-adapt3
%c = alloca i32, align 4_sv-adapt3	@(%c = alloca i32, align 4)_sv-adapt3
%data1 = alloca i32, align 4_sv-adapt3	@(%data1 = alloca i32, align 4)_sv-adapt3
%retval = alloca i32, align 4_sv-adapt3	@(%retval = alloca i32, align 4)_sv-adapt3
%a.addr = alloca i8**, align 8_swap	@(%a.addr = alloca i8**, align 8)_swap
%b.addr = alloca i8**, align 8_swap	@(%b.addr = alloca i8**, align 8)_swap
%c = alloca i8*, align 8_swap	@(%c = alloca i8*, align 8)_swap
%a.addr = alloca i8*, align 8_swap	@(%a.addr = alloca i8*, align 8)_swap
%b.addr = alloca i8*, align 8_swap	@(%b.addr = alloca i8*, align 8)_swap
%c = alloca i8, align 1_swap	@(%c = alloca i8, align 1)_swap
%retval = alloca i32, align 4_swap	@(%retval = alloca i32, align 4)_swap
%b = alloca [20 x i8], align 16_swap	@(%b = alloca [20 x i8], align 16)_swap
%a = alloca [20 x i8], align 16_swap	@(%a = alloca [20 x i8], align 16)_swap
%p1 = alloca [2 x i8*], align 16_swap	@(%p1 = alloca [2 x i8*], align 16)_swap
%pa = alloca i8*, align 8_swap	@(%pa = alloca i8*, align 8)_swap
%pb = alloca i8*, align 8_swap	@(%pb = alloca i8*, align 8)_swap
%i = alloca i32, align 4_swap	@(%i = alloca i32, align 4)_swap
%arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %a, i32 0, i32 0_swap	@(%a = alloca [20 x i8], align 16)_swap
%arraydecay1 = getelementptr inbounds [20 x i8], [20 x i8]* %b, i32 0, i32 0_swap	@(%b = alloca [20 x i8], align 16)_swap
