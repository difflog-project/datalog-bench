.type meets_at
.type S_key
.type C_name

.decl Rule(n: number)
.input Rule

.decl class(v0: C_name, v1: meets_at)
.input class

.decl LT(v0: C_name, v1: C_name)
.input LT

.decl enroll(v0: S_key, v1: C_name)
.input enroll

.decl invent_A(v0: S_key, v1: C_name, v2: meets_at)
.decl ans(v0: S_key)
.decl class_exists(v0: C_name, v1: meets_at, r: number)
.output class_exists

.decl LT_exists(v0: C_name, v1: C_name, r: number)
.output LT_exists

.decl enroll_exists(v0: S_key, v1: C_name, r: number)
.output enroll_exists

.decl invent_A_exists(v0: S_key, v1: C_name, v2: meets_at, r: number)
.output invent_A_exists

.decl ans_exists(v0: S_key, r: number)
.output ans_exists



invent_A(v0, v1, v2) :- invent_A(v0, v1, v2), Rule(0).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v2), r = 0, Rule(0).
invent_A_exists(v0, v1, v2, r) :- invent_A_exists(v0, v1, v2, r), Rule(r), Rule(0).
invent_A(v0, v1, v2) :- class(v1, v2), enroll(v0, v1), Rule(1).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), enroll(v0, v1), r = 1, Rule(1).
invent_A_exists(v0, v1, v2, r) :- class_exists(v1, v2, r), enroll(v0, v1), Rule(r), Rule(1).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), enroll_exists(v0, v1, r), Rule(r), Rule(1).
invent_A(v0, v1, v2) :- class(v1, v2), invent_A(v0, v1, v2), Rule(2).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), invent_A(v0, v1, v2), r = 2, Rule(2).
invent_A_exists(v0, v1, v2, r) :- class_exists(v1, v2, r), invent_A(v0, v1, v2), Rule(r), Rule(2).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), invent_A_exists(v0, v1, v2, r), Rule(r), Rule(2).
invent_A(v0, v1, v2) :- enroll(v0, v1), invent_A(v0, v1, v2), Rule(3).
invent_A_exists(v0, v1, v2, r) :- enroll(v0, v1), invent_A(v0, v1, v2), r = 3, Rule(3).
invent_A_exists(v0, v1, v2, r) :- enroll_exists(v0, v1, r), invent_A(v0, v1, v2), Rule(r), Rule(3).
invent_A_exists(v0, v1, v2, r) :- enroll(v0, v1), invent_A_exists(v0, v1, v2, r), Rule(r), Rule(3).
invent_A(v0, v1, v2) :- invent_A(v0, v1, v2), invent_A(v0, v1, v2), Rule(4).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v2), invent_A(v0, v1, v2), r = 4, Rule(4).
invent_A_exists(v0, v1, v2, r) :- invent_A_exists(v0, v1, v2, r), invent_A(v0, v1, v2), Rule(r), Rule(4).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v2), invent_A_exists(v0, v1, v2, r), Rule(r), Rule(4).
invent_A(v0, v1, v2) :- class(v1, v2), class(v1, v2), enroll(v0, v1), Rule(5).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), class(v1, v2), enroll(v0, v1), r = 5, Rule(5).
invent_A_exists(v0, v1, v2, r) :- class_exists(v1, v2, r), class(v1, v2), enroll(v0, v1), Rule(r), Rule(5).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), class_exists(v1, v2, r), enroll(v0, v1), Rule(r), Rule(5).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), class(v1, v2), enroll_exists(v0, v1, r), Rule(r), Rule(5).
invent_A(v0, v1, v2) :- class(v1, v2), class(v1, v2), invent_A(v0, v1, v2), Rule(6).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), class(v1, v2), invent_A(v0, v1, v2), r = 6, Rule(6).
invent_A_exists(v0, v1, v2, r) :- class_exists(v1, v2, r), class(v1, v2), invent_A(v0, v1, v2), Rule(r), Rule(6).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), class_exists(v1, v2, r), invent_A(v0, v1, v2), Rule(r), Rule(6).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), class(v1, v2), invent_A_exists(v0, v1, v2, r), Rule(r), Rule(6).
invent_A(v0, v1, v2) :- class(v1, v2), class(v1, v3), invent_A(v0, v1, v3), Rule(7).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), class(v1, v3), invent_A(v0, v1, v3), r = 7, Rule(7).
invent_A_exists(v0, v1, v2, r) :- class_exists(v1, v2, r), class(v1, v3), invent_A(v0, v1, v3), Rule(r), Rule(7).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), class_exists(v1, v3, r), invent_A(v0, v1, v3), Rule(r), Rule(7).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), class(v1, v3), invent_A_exists(v0, v1, v3, r), Rule(r), Rule(7).
invent_A(v0, v1, v2) :- class(v1, v3), class(v1, v3), invent_A(v0, v1, v2), Rule(8).
invent_A_exists(v0, v1, v2, r) :- class(v1, v3), class(v1, v3), invent_A(v0, v1, v2), r = 8, Rule(8).
invent_A_exists(v0, v1, v2, r) :- class_exists(v1, v3, r), class(v1, v3), invent_A(v0, v1, v2), Rule(r), Rule(8).
invent_A_exists(v0, v1, v2, r) :- class(v1, v3), class_exists(v1, v3, r), invent_A(v0, v1, v2), Rule(r), Rule(8).
invent_A_exists(v0, v1, v2, r) :- class(v1, v3), class(v1, v3), invent_A_exists(v0, v1, v2, r), Rule(r), Rule(8).
invent_A(v0, v1, v2) :- class(v1, v3), class(v1, v2), invent_A(v0, v1, v3), Rule(9).
invent_A_exists(v0, v1, v2, r) :- class(v1, v3), class(v1, v2), invent_A(v0, v1, v3), r = 9, Rule(9).
invent_A_exists(v0, v1, v2, r) :- class_exists(v1, v3, r), class(v1, v2), invent_A(v0, v1, v3), Rule(r), Rule(9).
invent_A_exists(v0, v1, v2, r) :- class(v1, v3), class_exists(v1, v2, r), invent_A(v0, v1, v3), Rule(r), Rule(9).
invent_A_exists(v0, v1, v2, r) :- class(v1, v3), class(v1, v2), invent_A_exists(v0, v1, v3, r), Rule(r), Rule(9).
invent_A(v0, v1, v2) :- class(v1, v2), enroll(v0, v1), enroll(v0, v1), Rule(10).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), enroll(v0, v1), enroll(v0, v1), r = 10, Rule(10).
invent_A_exists(v0, v1, v2, r) :- class_exists(v1, v2, r), enroll(v0, v1), enroll(v0, v1), Rule(r), Rule(10).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), enroll_exists(v0, v1, r), enroll(v0, v1), Rule(r), Rule(10).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), enroll(v0, v1), enroll_exists(v0, v1, r), Rule(r), Rule(10).
invent_A(v0, v1, v2) :- class(v1, v2), enroll(v0, v1), invent_A(v0, v1, v2), Rule(11).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), enroll(v0, v1), invent_A(v0, v1, v2), r = 11, Rule(11).
invent_A_exists(v0, v1, v2, r) :- class_exists(v1, v2, r), enroll(v0, v1), invent_A(v0, v1, v2), Rule(r), Rule(11).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), enroll_exists(v0, v1, r), invent_A(v0, v1, v2), Rule(r), Rule(11).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), enroll(v0, v1), invent_A_exists(v0, v1, v2, r), Rule(r), Rule(11).
invent_A(v0, v1, v2) :- class(v1, v2), invent_A(v0, v1, v2), invent_A(v0, v1, v2), Rule(12).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), invent_A(v0, v1, v2), invent_A(v0, v1, v2), r = 12, Rule(12).
invent_A_exists(v0, v1, v2, r) :- class_exists(v1, v2, r), invent_A(v0, v1, v2), invent_A(v0, v1, v2), Rule(r), Rule(12).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), invent_A_exists(v0, v1, v2, r), invent_A(v0, v1, v2), Rule(r), Rule(12).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), invent_A(v0, v1, v2), invent_A_exists(v0, v1, v2, r), Rule(r), Rule(12).
invent_A(v0, v1, v2) :- class(v1, v2), invent_A(v0, v1, v3), invent_A(v0, v1, v3), Rule(13).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), invent_A(v0, v1, v3), invent_A(v0, v1, v3), r = 13, Rule(13).
invent_A_exists(v0, v1, v2, r) :- class_exists(v1, v2, r), invent_A(v0, v1, v3), invent_A(v0, v1, v3), Rule(r), Rule(13).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), invent_A_exists(v0, v1, v3, r), invent_A(v0, v1, v3), Rule(r), Rule(13).
invent_A_exists(v0, v1, v2, r) :- class(v1, v2), invent_A(v0, v1, v3), invent_A_exists(v0, v1, v3, r), Rule(r), Rule(13).
invent_A(v0, v1, v2) :- class(v1, v3), invent_A(v0, v1, v3), invent_A(v0, v1, v2), Rule(14).
invent_A_exists(v0, v1, v2, r) :- class(v1, v3), invent_A(v0, v1, v3), invent_A(v0, v1, v2), r = 14, Rule(14).
invent_A_exists(v0, v1, v2, r) :- class_exists(v1, v3, r), invent_A(v0, v1, v3), invent_A(v0, v1, v2), Rule(r), Rule(14).
invent_A_exists(v0, v1, v2, r) :- class(v1, v3), invent_A_exists(v0, v1, v3, r), invent_A(v0, v1, v2), Rule(r), Rule(14).
invent_A_exists(v0, v1, v2, r) :- class(v1, v3), invent_A(v0, v1, v3), invent_A_exists(v0, v1, v2, r), Rule(r), Rule(14).
invent_A(v0, v1, v2) :- class(v1, v3), invent_A(v0, v1, v2), invent_A(v0, v1, v3), Rule(15).
invent_A_exists(v0, v1, v2, r) :- class(v1, v3), invent_A(v0, v1, v2), invent_A(v0, v1, v3), r = 15, Rule(15).
invent_A_exists(v0, v1, v2, r) :- class_exists(v1, v3, r), invent_A(v0, v1, v2), invent_A(v0, v1, v3), Rule(r), Rule(15).
invent_A_exists(v0, v1, v2, r) :- class(v1, v3), invent_A_exists(v0, v1, v2, r), invent_A(v0, v1, v3), Rule(r), Rule(15).
invent_A_exists(v0, v1, v2, r) :- class(v1, v3), invent_A(v0, v1, v2), invent_A_exists(v0, v1, v3, r), Rule(r), Rule(15).
invent_A(v0, v1, v2) :- enroll(v0, v1), enroll(v0, v1), invent_A(v0, v1, v2), Rule(16).
invent_A_exists(v0, v1, v2, r) :- enroll(v0, v1), enroll(v0, v1), invent_A(v0, v1, v2), r = 16, Rule(16).
invent_A_exists(v0, v1, v2, r) :- enroll_exists(v0, v1, r), enroll(v0, v1), invent_A(v0, v1, v2), Rule(r), Rule(16).
invent_A_exists(v0, v1, v2, r) :- enroll(v0, v1), enroll_exists(v0, v1, r), invent_A(v0, v1, v2), Rule(r), Rule(16).
invent_A_exists(v0, v1, v2, r) :- enroll(v0, v1), enroll(v0, v1), invent_A_exists(v0, v1, v2, r), Rule(r), Rule(16).
invent_A(v0, v1, v2) :- enroll(v0, v1), invent_A(v0, v1, v2), invent_A(v0, v1, v2), Rule(17).
invent_A_exists(v0, v1, v2, r) :- enroll(v0, v1), invent_A(v0, v1, v2), invent_A(v0, v1, v2), r = 17, Rule(17).
invent_A_exists(v0, v1, v2, r) :- enroll_exists(v0, v1, r), invent_A(v0, v1, v2), invent_A(v0, v1, v2), Rule(r), Rule(17).
invent_A_exists(v0, v1, v2, r) :- enroll(v0, v1), invent_A_exists(v0, v1, v2, r), invent_A(v0, v1, v2), Rule(r), Rule(17).
invent_A_exists(v0, v1, v2, r) :- enroll(v0, v1), invent_A(v0, v1, v2), invent_A_exists(v0, v1, v2, r), Rule(r), Rule(17).
invent_A(v0, v1, v2) :- invent_A(v0, v1, v2), invent_A(v0, v1, v2), invent_A(v0, v1, v2), Rule(18).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v2), invent_A(v0, v1, v2), invent_A(v0, v1, v2), r = 18, Rule(18).
invent_A_exists(v0, v1, v2, r) :- invent_A_exists(v0, v1, v2, r), invent_A(v0, v1, v2), invent_A(v0, v1, v2), Rule(r), Rule(18).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v2), invent_A_exists(v0, v1, v2, r), invent_A(v0, v1, v2), Rule(r), Rule(18).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v2), invent_A(v0, v1, v2), invent_A_exists(v0, v1, v2, r), Rule(r), Rule(18).
invent_A(v0, v1, v2) :- invent_A(v0, v1, v2), invent_A(v0, v1, v3), invent_A(v0, v1, v3), Rule(19).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v2), invent_A(v0, v1, v3), invent_A(v0, v1, v3), r = 19, Rule(19).
invent_A_exists(v0, v1, v2, r) :- invent_A_exists(v0, v1, v2, r), invent_A(v0, v1, v3), invent_A(v0, v1, v3), Rule(r), Rule(19).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v2), invent_A_exists(v0, v1, v3, r), invent_A(v0, v1, v3), Rule(r), Rule(19).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v2), invent_A(v0, v1, v3), invent_A_exists(v0, v1, v3, r), Rule(r), Rule(19).
invent_A(v0, v1, v2) :- invent_A(v0, v1, v3), invent_A(v0, v1, v3), invent_A(v0, v1, v2), Rule(20).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A(v0, v1, v3), invent_A(v0, v1, v2), r = 20, Rule(20).
invent_A_exists(v0, v1, v2, r) :- invent_A_exists(v0, v1, v3, r), invent_A(v0, v1, v3), invent_A(v0, v1, v2), Rule(r), Rule(20).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A_exists(v0, v1, v3, r), invent_A(v0, v1, v2), Rule(r), Rule(20).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A(v0, v1, v3), invent_A_exists(v0, v1, v2, r), Rule(r), Rule(20).
invent_A(v0, v1, v2) :- invent_A(v0, v1, v3), invent_A(v0, v1, v2), invent_A(v0, v1, v3), Rule(21).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A(v0, v1, v2), invent_A(v0, v1, v3), r = 21, Rule(21).
invent_A_exists(v0, v1, v2, r) :- invent_A_exists(v0, v1, v3, r), invent_A(v0, v1, v2), invent_A(v0, v1, v3), Rule(r), Rule(21).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A_exists(v0, v1, v2, r), invent_A(v0, v1, v3), Rule(r), Rule(21).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A(v0, v1, v2), invent_A_exists(v0, v1, v3, r), Rule(r), Rule(21).
invent_A(v0, v1, v2) :- invent_A(v0, v1, v3), invent_A(v4, v1, v3), invent_A(v4, v1, v2), Rule(22).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A(v4, v1, v3), invent_A(v4, v1, v2), r = 22, Rule(22).
invent_A_exists(v0, v1, v2, r) :- invent_A_exists(v0, v1, v3, r), invent_A(v4, v1, v3), invent_A(v4, v1, v2), Rule(r), Rule(22).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A_exists(v4, v1, v3, r), invent_A(v4, v1, v2), Rule(r), Rule(22).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A(v4, v1, v3), invent_A_exists(v4, v1, v2, r), Rule(r), Rule(22).
invent_A(v0, v1, v2) :- invent_A(v0, v1, v3), invent_A(v4, v1, v2), invent_A(v4, v1, v3), Rule(23).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A(v4, v1, v2), invent_A(v4, v1, v3), r = 23, Rule(23).
invent_A_exists(v0, v1, v2, r) :- invent_A_exists(v0, v1, v3, r), invent_A(v4, v1, v2), invent_A(v4, v1, v3), Rule(r), Rule(23).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A_exists(v4, v1, v2, r), invent_A(v4, v1, v3), Rule(r), Rule(23).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A(v4, v1, v2), invent_A_exists(v4, v1, v3, r), Rule(r), Rule(23).
invent_A(v0, v1, v2) :- invent_A(v0, v1, v3), invent_A(v4, v5, v3), invent_A(v4, v5, v2), Rule(24).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A(v4, v5, v3), invent_A(v4, v5, v2), r = 24, Rule(24).
invent_A_exists(v0, v1, v2, r) :- invent_A_exists(v0, v1, v3, r), invent_A(v4, v5, v3), invent_A(v4, v5, v2), Rule(r), Rule(24).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A_exists(v4, v5, v3, r), invent_A(v4, v5, v2), Rule(r), Rule(24).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A(v4, v5, v3), invent_A_exists(v4, v5, v2, r), Rule(r), Rule(24).
invent_A(v0, v1, v2) :- invent_A(v0, v1, v3), invent_A(v4, v5, v2), invent_A(v4, v5, v3), Rule(25).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A(v4, v5, v2), invent_A(v4, v5, v3), r = 25, Rule(25).
invent_A_exists(v0, v1, v2, r) :- invent_A_exists(v0, v1, v3, r), invent_A(v4, v5, v2), invent_A(v4, v5, v3), Rule(r), Rule(25).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A_exists(v4, v5, v2, r), invent_A(v4, v5, v3), Rule(r), Rule(25).
invent_A_exists(v0, v1, v2, r) :- invent_A(v0, v1, v3), invent_A(v4, v5, v2), invent_A_exists(v4, v5, v3, r), Rule(r), Rule(25).
ans(v0) :- ans(v0), Rule(26).
ans_exists(v0, r) :- ans(v0), r = 26, Rule(26).
ans_exists(v0, r) :- ans_exists(v0, r), Rule(r), Rule(26).
ans(v0) :- ans(v0), ans(v0), Rule(27).
ans_exists(v0, r) :- ans(v0), ans(v0), r = 27, Rule(27).
ans_exists(v0, r) :- ans_exists(v0, r), ans(v0), Rule(r), Rule(27).
ans_exists(v0, r) :- ans(v0), ans_exists(v0, r), Rule(r), Rule(27).
ans(v0) :- ans(v0), ans(v0), ans(v0), Rule(28).
ans_exists(v0, r) :- ans(v0), ans(v0), ans(v0), r = 28, Rule(28).
ans_exists(v0, r) :- ans_exists(v0, r), ans(v0), ans(v0), Rule(r), Rule(28).
ans_exists(v0, r) :- ans(v0), ans_exists(v0, r), ans(v0), Rule(r), Rule(28).
ans_exists(v0, r) :- ans(v0), ans(v0), ans_exists(v0, r), Rule(r), Rule(28).
ans(v0) :- ans(v0), ans(v1), ans(v1), Rule(29).
ans_exists(v0, r) :- ans(v0), ans(v1), ans(v1), r = 29, Rule(29).
ans_exists(v0, r) :- ans_exists(v0, r), ans(v1), ans(v1), Rule(r), Rule(29).
ans_exists(v0, r) :- ans(v0), ans_exists(v1, r), ans(v1), Rule(r), Rule(29).
ans_exists(v0, r) :- ans(v0), ans(v1), ans_exists(v1, r), Rule(r), Rule(29).
ans(v0) :- ans(v1), ans(v1), ans(v0), Rule(30).
ans_exists(v0, r) :- ans(v1), ans(v1), ans(v0), r = 30, Rule(30).
ans_exists(v0, r) :- ans_exists(v1, r), ans(v1), ans(v0), Rule(r), Rule(30).
ans_exists(v0, r) :- ans(v1), ans_exists(v1, r), ans(v0), Rule(r), Rule(30).
ans_exists(v0, r) :- ans(v1), ans(v1), ans_exists(v0, r), Rule(r), Rule(30).
ans(v0) :- ans(v1), ans(v0), ans(v1), Rule(31).
ans_exists(v0, r) :- ans(v1), ans(v0), ans(v1), r = 31, Rule(31).
ans_exists(v0, r) :- ans_exists(v1, r), ans(v0), ans(v1), Rule(r), Rule(31).
ans_exists(v0, r) :- ans(v1), ans_exists(v0, r), ans(v1), Rule(r), Rule(31).
ans_exists(v0, r) :- ans(v1), ans(v0), ans_exists(v1, r), Rule(r), Rule(31).
